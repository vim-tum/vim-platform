[
  {
    "name": "Trips",
    "description": "Provides overhead, complaint, and minimalCosts variables of trips",
    "type": "kafka_consumer",
    "kafka_uri": "kafka:9092",
    "topic": "crowd-nav-trips",
    "serializer": "JSON",
    "channel": "provision",
    "incomingDataTypes": [
      {
        "name": "overhead",
        "description": "overhead of the trips",
        "scale": "Metric",
        "dataProviderName": "Trips",
        "criteria": "Minimize"
      }, {
        "name": "complaint",
        "description": "indicates complaint if overhead of a trip is greater than 2.5",
        "scale": "Boolean",
        "dataProviderName": "Trips",
        "criteria": "Minimize"
      }, {
        "name": "minimalCosts",
        "description": "total cost of optimum route of a car",
        "scale": "Metric",
        "dataProviderName": "Trips",
        "criteria": "Minimize"
      }
    ]
  }, {
  "name": "Performance",
  "description": "Provides tick duration",
  "type": "kafka_consumer",
  "kafka_uri": "kafka:9092",
  "topic": "crowd-nav-performance",
  "serializer": "JSON",
  "channel": "provision",
  "incomingDataTypes": [
    {
      "name": "lastTickDuration",
      "description": "last tick duration processed by the system before generating a new car",
      "scale": "Metric",
      "dataProviderName": "Performance",
      "criteria": "Minimize"
    }
  ]
}, {
  "name": "Routing",
  "description": "Provides how long it takes for routing a car",
  "type": "kafka_consumer",
  "kafka_uri": "kafka:9092",
  "channel": "provision",
  "topic": "crowd-nav-routing",
  "serializer": "JSON",
  "incomingDataTypes": [
    {
      "name": "routingDuration",
      "description": "time for routing a car",
      "scale": "Metric",
      "dataProviderName": "Routing",
      "criteria": "Minimize"
    }
  ]
},{
  "name": "Provision",
  "description": "Sets up a provision channel with simulation",
  "type": "kafka_consumer",
  "kafka_uri": "kafka:9092",
  "channel": "provision",
  "topic": "provision",
  "serializer": "JSON",
  "incomingDataTypes": [
    {
      "name": "resource",
      "description": "gets resources from Simulator (RoadMap, etc)",
      "scale": "Metric",
      "dataProviderName": "Provision",
      "criteria": "Minimize"
    },{
      "name": "results",
      "description": "gets result blob from simulator",
      "scale": "Metric",
      "dataProviderName": "Provision",
      "criteria": "Minimize"
    }
  ]
}
]